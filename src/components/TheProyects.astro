---
import { t } from "i18next";
import { PROYECTS } from "../shared/constants";
import ProyectItem from "./ProyectItem.astro";
import TheSection from "./TheSection.astro";
import "../assets/splide.min.css";
import ProyectInfo from "./ProyectInfo.astro";
---

<TheSection
  id="proyects"
  title={t("home.proyects.title")}
  description={t("home.proyects.subtitle")}
>
  <div class="container mx-auto">
    <div class="splide">
      <div class="splide__arrows">
        <button class="bg-gray-900 shadow splide__arrow splide__arrow--prev">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-6 h-6 text-white"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"></path>
          </svg>
        </button>
        <button class="bg-gray-900 shadow splide__arrow splide__arrow--next">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-6 h-6 text-white"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"></path>
          </svg>
        </button>
      </div>
      <div class="splide__track">
        <div class="splide__list">
          {
            PROYECTS.map((proyect) => (
              <ProyectItem
                title={proyect.title}
                src={proyect.src}
                github={proyect.github}
                demo={proyect.demo}
              />
            ))
          }
        </div>
      </div>
    </div>
  </div>
  {
    PROYECTS.map((proyect) => (
      <ProyectInfo
        title={proyect.title}
        src={proyect.src}
        github={proyect.github}
        demo={proyect.demo}
        description={proyect.description}
        pointsLearned={proyect.pointsLearned}
      />
    ))
  }

  <script>
    const splide = new Splide(".splide", {
      type: "loop",
      autoplay: false,
      pagination: false,
    });
    splide.mount();
  </script>
</TheSection>
